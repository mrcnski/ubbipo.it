---
interface Props {
    name: string;
    ingredients?: Array<string>;
    description?: string;
    image?: string;
    producer?: string;
    location?: string;
    tags?: string;
    glass?: string;
    bottle?: string;
    price?: string;
    available: string;
    visible: string;
}

import FormatText from "@components/FormatText.astro";
import MenuHeading from "@components/MenuHeading.astro";
import MenuImage from "@components/MenuImage.astro";
import MenuIngredients from "@components/MenuIngredients.astro";
import MenuTags from "@components/MenuTags.astro";

const { name, ingredients, description, image, producer, location, tags, glass, bottle, price, available, visible } = Astro.props;
// Filter out empty tags.
var splitTags = tags?.split(",").filter(tag => tag).map(tag => tag.toLowerCase().trim()) ?? [];

const visibleClass = (visible != "yes") ? "invisible" : "";

import { getLangFromUrl, useTranslations } from '@i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class:list={["menu-item", visibleClass]}>
    <MenuHeading name={name} price={price} glass={glass} bottle={bottle} available={available} bio={splitTags.includes("bio")} natural={splitTags.includes("natural")} />

    <div class="menu-item-content">
        <div class="menu-item-column">
            {(description) &&
                <span class="menu-item-description"><FormatText text={description} /></span>}
            {(ingredients) &&
                <span class="menu-item-ingredients"><MenuIngredients ingredients={ingredients} /></span>}
            {(producer) &&
                <span class="producer">
                    {/*<span class="producer-field">{t("menu.producer")}:</span>*/}
                    <b>"<FormatText text={producer} />"</b>
                </span>}

            <span class="non-mobile-only">
                {(location || splitTags.length > 0) && <MenuTags location={location} tags={splitTags} />}
            </span>
        </div>
        {(image) &&
            <div class="menu-item-image">
                <MenuImage name={name} relativeSrc={image} alt={name} />
            </div>
        }

    </div>
    {(location || splitTags.length > 0) &&
        <span class="mobile-only">
            <MenuTags location={location} tags={splitTags} />
        </span>
    }
</div>

<style lang="less">
    .menu-item {
    }

    .menu-item-content {
        color: var(--brown);

        display: flex;
        flex-direction: row;
        justify-content: space-between;
        // align-items: center;
        row-gap: 1.5rem;
        column-gap: 2rem;

        @media (max-width: 900px) {
            flex-direction: column;
            justify-content: space-between;
            align-items: flex-start;
        }
    }
    .menu-item-ingredients {
        font-size: 1rem;
    }
    .menu-item-description {
        font-size: 1.1rem;
    }

    .menu-item-column {
        display: flex;
        flex-direction: column;
        gap: 0.35em;

        max-width: 70ch;
    }
    .menu-item-image {
        flex: 0 0 auto;
    }

    .producer {
        font-size: 1rem;
    }
    .producer-field {
        margin-right: 0.4em;
        font-size: 1rem;
    }

    .non-mobile-only {
        display: inline-block;

        @media (max-width: 900px) {
            display: none;
        }
    }
    .mobile-only {
        display: none;

        @media (max-width: 900px) {
            margin-top: 0.35rem;
            display: inline-block;
        }
    }

    .invisible {
        display: none;
    }
</style>
